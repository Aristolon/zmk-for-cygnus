/*
* Copyright (c) 2021 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>


#define Default_layer   0
#define Layer_1         1
#define layer_2         2
#define layer_3         3
#define layer_4         4
#define layer_5         5
#define layer_6         6
#define layer_7         7



/ {
    behaviors {
	    td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = 	<&kp O>, 
			            <&kp D>;
        };
	    td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = 	<&kp L>, 
			            <&kp I>;
        };
	    td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = 	<&kp E>, 
			            <&kp F>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = 	<&kp M>, 
			            <&kp B>;
        };
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = 	<&kp UP_ARROW>, 
			            <&kp PAGE_UP>;
        };
        td5: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = 	<&kp DOWN_ARROW>, 
			            <&kp PAGE_DOWN>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <170>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <125>;
            flavor = "hold-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        qtl: quick_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            global-quick-tap;
            bindings =
                <&mo>,
                <&kp>;
        };
    };

    macros {
        pl: pl {
            compatible = "zmk,behavior-macro";
            label = "PL";
            #binding-cells = <0>;
            bindings = <&kp P &kp L &kp ENTER>;
        };
        xl: xl {
            compatible = "zmk,behavior-macro";
            label = "XL";
            #binding-cells = <0>;
            bindings = <&kp X &kp L &kp ENTER>;
        };
        pu: pu {
            compatible = "zmk,behavior-macro";
            label = "PU";
            #binding-cells = <0>;
            bindings = <&kp P &kp U &kp ENTER>;
        };
        di: di {
            compatible = "zmk,behavior-macro";
            label = "DI";
            #binding-cells = <0>;
            bindings = <&kp D &kp I &kp ENTER>;
        };
        tmn_s: tmn_s {
            compatible = "zmk,behavior-macro";
            label = "TMN_S";
            #binding-cells = <0>;
            bindings = <&kp G &kp X &kp Y &kp C &kp ENTER>;
        };
        tmn_FH: tmn_FH {
            compatible = "zmk,behavior-macro";
            label = "TMN_FH";
            #binding-cells = <0>;
            bindings = <&kp B &kp X &kp H &kp S &kp ENTER>;
        };
        tmn_FHc: tmn_FHc {
            compatible = "zmk,behavior-macro";
            label = "TMN_FHC";
            #binding-cells = <0>;
            bindings = <&kp L &kp X &kp H &kp S &kp ENTER>;
        };
        tmn_sysgen: tmn_sysgen {
            compatible = "zmk,behavior-macro";
            label = "TMN_SYSGEN";
            #binding-cells = <0>;
            bindings = <&kp X &kp T &kp F &kp J &kp ENTER>;
        };
        tmn_valve: tmn_valve {
            compatible = "zmk,behavior-macro";
            label = "TMN_VALVE";
            #binding-cells = <0>;
            bindings = <&kp F &kp M &kp F &kp J &kp ENTER>;
        };
        tmn_riserpipe: tmn_riserpipe {
            compatible = "zmk,behavior-macro";
            label = "TMN_RISERPIPE";
            #binding-cells = <0>;
            bindings = <&kp L &kp G &kp B &kp Z &kp ENTER>;
        };
        tmn_wsgen: tmn_wsgen {
            compatible = "zmk,behavior-macro";
            label = "TMN_WSGEN";
            #binding-cells = <0>;
            bindings = <&kp G &kp S &kp F &kp J &kp ENTER>;
        };
        tmn_wdgen: tmn_wdgen {
            compatible = "zmk,behavior-macro";
            label = "TMN_WDGEN";
            #binding-cells = <0>;
            bindings = <&kp P &kp S &kp F &kp J &kp ENTER>;
        };
    };

    // COMBOS
    // ===========================================================================================================
    /*
	    .----------------------------------------------------------------------.
	    |  0  |  1  |  2  |  3  |  4  |          |  5  |  6  |  7  |  8  |  9  |
	    |  10 |  11 |  12 |  13 |  14 |          |  15 |  16 |  17 |  18 |  19 |
	    |  20 |  21 |  22 |  23 |  24 |          |  25 |  26 |  27 |  28 |  29 |
	    '-----------\  30 |  31 |  32 |          |  32 |  33 |  34 | /---------'
	                 '----------------------------------------------'
			
        ctrl+shift    = 10 | 20
        
	    tab 	= 0  | 1		
	    alt+F4 	= 0  | 24
        !    	= 1  | 2
		?    	= 27 | 28		
	    "    	= 11 | 13		
	    '   	= 21 | 23		

        F1	    = 0  | 10
        F2	    = 1  | 11
        F3      = 2  | 22
        F4 	    = 3  | 33
        F8 	    = 1  | 3

	    (       = 3  | 4        
        )       = 20 | 21
        [       = 13 | 14
        ]       = 15 | 16
        {       = 23 | 24
        }       = 25 | 26

        ENTER   = 18 | 19 (layer_4)	    
    */

    combos {
        compatible = "zmk,combos";   
        
        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
            layers = <0 4 6>;
            timeout-ms = <40>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <18 19>;
            layers = <1 4>;
            timeout-ms = <40>;
        };

        cb_bootloader {
            bindings = <&bootloader>;
            key-positions = <13 16>;
            layers = <3>;
            timeout-ms = <40>;
        };
        
        cb_exclamation {
            bindings = <&kp EXCL>;
            key-positions = <1 2>;
            layers = <0 6>;
            timeout-ms = <40>;
        };
        
        cb_question {
            bindings = <&kp QMARK>;
            key-positions = <27 28>;
            layers = <0 6>;
            timeout-ms = <40>;
        };

        cb_doublequotes {
            bindings = <&kp DQT>;
            key-positions = <11 13>;
            layers = <0 4>;
            timeout-ms = <40>;
        };

        cb_singlequote {
            bindings = <&kp SQT>;
            key-positions = <21 23>;
            layers = <0 4>;
            timeout-ms = <40>;
        };

        ctrl_plus_shift {
            bindings = <&kp LC(LS(LCTRL))>;
            key-positions = <10 20>;
            layers = <0 4 6>;
            timeout-ms = <40>;
        };

        combo_f1 {
            bindings = <&kp F1>;
            key-positions = <0 10>;
            layers = <0 4>;
        };

        combo_f2 {
            bindings = <&kp F2>;
            key-positions = <1 11>;
            layers = <0 4>;
        };

        combo_f3 {
            bindings = <&kp F3>;
            key-positions = <2 12>;
            layers = <0 4>;
        };

        combo_f4 {
            bindings = <&kp F4>;
            key-positions = <3 13>;
            layers = <0 4>;
        };

        combo_f5 {
            bindings = <&kp F5>;
            key-positions = <4 14>;
            layers = <0 4 6>;
        };

        combo_f8 {
            bindings = <&kp F8>;
            key-positions = <1 3>;
            layers = <0 4>;
            timeout-ms = <40>;
        };

        cb_lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        cb_rlar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
        };

        cb_lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
        };

        cb_rbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <15 16>;
        };

        cb_lbrc {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 24>;
        };

        cb_rbrc {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <25 26>;
        };

        cb_altf4 {
            bindings = <&kp LA(F4)>;
            key-positions = <0 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default_layer {
            bindings = <
                &kp Q    &kp W      &kp F                       &kp P   &kp G                &kp J        &kp L     &kp U                 &kp Y                  &kp BACKSPACE
                &kp A    &kp R      &kp S                       &kp T   &kp D                &kp H        &kp N     &kp E                 &kp I                  &kp O
                &kp Z    &kp X      &kp C                       &kp V   &hm LEFT_SHIFT B     &kp K        &kp M     &hm RIGHT_ALT COMMA   &hm RIGHT_CONTROL DOT  &hm RIGHT_SHIFT SLASH
                                    &qt LEFT_CONTROL ESCAPE     &mo 1   &kp SPACE            &kp ENTER    &mo 2     &qt LEFT_GUI SEMI
            >;
        };

        Layer_1 {
            bindings = <
                &kp LA(Q)       &kp LA(W)           &td4            &kp LA(F)        &kp F12          &kp KP_NUMBER_7   &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &kp KP_PLUS
                &kp LA(A)       &kp LEFT_ARROW      &td5            &kp RIGHT_ARROW  &none            &kp KP_NUMBER_4   &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SLASH  &kp KP_ASTERISK
                &kp C_AL_CALC   &none               &kp LC(LA(C))   &none            &none            &kp KP_NUMBER_1   &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DELETE    &kp BACKSPACE
                                                    &trans          &trans           &trans           &kp KP_NUMBER_0   &mo 3            &kp KP_DOT
            >;
        };

        layer_2 {
            bindings = <
                &kp TILDE       &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(NUMBER_5)        &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(N8)    &kp MINUS     &kp EQUAL
                &kp NUMBER_1    &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4       &kp NUMBER_5            &kp NUMBER_6      &kp NUMBER_7      &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
                &kp GRAVE       &kp KP_SLASH      &kp PIPE          &kp BACKSLASH      &kp UNDER               &trans            &none             &none         &kp KP_DOT    &kp DELETE
                                                  &kp LEFT_CONTROL  &mo 3              &kp SPACE               &trans            &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
                &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4        &bt BT_CLR      &bt BT_CLR_ALL  &none  &none	&none
                &out OUT_USB    &out OUT_BLE    &out OUT_TOG    &none           &none       	    &none           &none           &none  &none  &none
                &kp C_MUTE      &kp C_VOL_DN    &kp C_VOL_UP    &none           &none               &to 4           &to 6           &none  &none  &none
                                                &none           &none           &none       	    &none           &none           &none
            >;
        };

        layer_4 {
            bindings = <
                &kp Q            &kp W  &td2                        &kp P   &td1            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS   &kp KP_PLUS
                &kp A            &kp R  &kp S                       &kp T   &td0            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SLASH   &kp KP_ASTERISK
                &hm LEFT_SHIFT Z &kp X  &kp C                       &kp V   &td3      	    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DELETE     &kp BACKSPACE
                                        &qt LEFT_CONTROL ESCAPE     &mo 5   &kp SPACE       &kp KP_NUMBER_0  &kp ENTER        &kp KP_DOT
            >;
        };

        layer_5 {
            bindings = <
                &tmn_riserpipe    &tmn_wsgen  &tmn_wdgen  &pu          &pl          &kp TILDE  &kp KP_SLASH     &kp PIPE        &kp BACKSLASH       &kp UNDER
                &kp LA(A)         &trans      &tmn_s      &tmn_FHc     &di          &trans     &trans           &trans          &kp LS(NUMBER_2)    &kp Q
                &kp C_AL_CALC     &xl         &tmn_valve  &tmn_sysgen  &tmn_FH      &to 0      &trans           &kp LESS_THAN   &kp GREATER_THAN    &trans
                                              &trans      &trans       &trans       &trans     &trans           &trans
            >;
        };

        layer_6 {
            bindings = <
                &kp NUMBER_1    &kp NUMBER_2    &kp UP_ARROW                &kp NUMBER_3        &kp NUMBER_4        &kp Y      &kp U            &kp I      &kp O    &kp P      
                &kp NUMBER_5    &kp LEFT_ARROW  &kp DOWN_ARROW              &kp RIGHT_ARROW     &kp NUMBER_6        &kp H      &kp J            &kp K      &kp L    &kp SEMI
                &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9                &kp KP_MINUS        &kp KP_PLUS         &kp N      &kp M            &kp COMMA  &kp DOT  &kp SLASH
                                                &qt LEFT_CONTROL ESCAPE     &mo 7               &kp SPACE           &kp ENTER  &kp RIGHT_ALT    &kp BACKSPACE
            >;
        };

        layer_7 {
            bindings = <
                &kp GRAVE   &kp W       &trans  &kp R   &kp T           &kp F6  &kp F7  &none  &kp MINUS   &kp EQUAL
                &kp A       &trans      &trans  &trans  &kp G           &none   &none   &none  &none       &none
                &kp Z       &kp X       &kp C   &kp V   &kp B           &to 0   &none   &none  &none       &none
                                        &trans  &trans  &trans          &none   &none   &none
            >;
        };
    };
};